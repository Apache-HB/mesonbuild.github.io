fragment_downloaded_cb({"url": "Release-notes-for-0-46-0.html#page-description", "fragment": "Allow early return from a script \nBuilding both shared and static libraries \nCompiler object can now be passed to run_command \ndeclare_dependency supports link_whole \nOld command names are now errors \nMeson and meson configure now accept the same arguments \nmeson help now shows command line help \nAutogeneration of simple meson.build files \nSupport for lcc compiler for e2k Elbrus architecture \nRelaxing of target name requirements \nAdded new partial_dependency method to dependencies and libraries \nImproved generation of pkg config files for static only libraries. \nImprovements to pkgconfig module \npkgconfig.generate requires parameters non string arguments \ntest now supports depends keyword parameter \nAdded the function subdir_done Its invocation exits the current script at the point of invocation. All previously invoked build targets and commands are build executed. All following ones are ignored. If the current script was invoked via subdir the parent script continues normally. \nA new function both_libraries has been added to build both shared and static libraries at the same time. Source files will be compiled only once and object files will be reused to build both shared and static libraries unless b_staticpic user option or pic argument are set to false in which case sources will be compiled twice. \nThe returned buildtarget object always represents the shared library. \nThis can be used to run the current compiler with the specified arguments to obtain additional information from it. One of the use cases is to get the location of development files for the GCC plugins \ndeclare_dependency supports link_whole parameter. link_whole propagates to build target that uses dependency. \nOld executable names mesonintrospect mesonconf mesonrewriter and mesontest have been deprecated for a long time. Starting from this version they no longer do anything but instead always error out. All functionality is available as subcommands in the main meson binary. \nPreviously meson required that builtin arguments like prefix be passed as prefix to meson and Dprefix to meson configure. meson now accepts D form like meson configure has. meson configure also accepts the prefix form like meson has. \nCommand line parsing is now less surprising. meson help is now equivalent to meson help and meson help is equivalent to meson help instead of creating a build directory called help in these cases. \nA feature to generate a meson.build file compiling given C C source files into a single executable has been added to meson init By default it will take all recognizable source files in the current directory. You can also specify a list of dependencies with the d flag and automatically invoke a build with the b flag to check if the code builds with those dependencies. \nFor example \nwill look for C or C files in the current directory generate a meson.build for them with the dependencies of sdl2 and gl and immediately try to build it overwriting any previous meson.build and build directory. \nIn this version a support for lcc compiler for Elbrus processors based on e2k microarchitecture has been added. \nExamples of such CPUs \nSuch compiler have a similar behavior as gcc basic option compatibility but in is not strictly compatible with gcc as of current version. \nMajor differences as of version \nSo every noted difference is properly handled now in meson. String escape character sequence update \nSingle quoted strings in meson have been taught the same set of escape sequences as in Python. It is therefore now possible to use arbitrary bytes in strings like for example NUL and other ASCII control characters. See the chapter about Strings in Syntax for more details. \nPotential backwards compatibility issue Any valid escape sequence according to the new rules will be interpreted as an escape sequence instead of the literal characters. Previously only the following escape sequences were supported in single quote strings and n. \nNote that the behaviour of triple quoted multiline strings has not changed. They behave like raw strings and do not support any escape sequences. A new wrap mode was added wrap mode forcefallback. When this is set dependencies for which a fallback was provided will always use it even if an external dependency exists and satisfies the version requirements. \nIn earlier versions of Meson you could only have one target of a given name for each type. For example you could not have two executables named foo. This requirement is now relaxed so that you can have multiple targets with the same name as long as they are in different subdirectories. \nNote that projects that have multiple targets with the same name can not be built with the flat layout or any backend that writes outputs in the same directory. \nIt is now possible to use only part of a dependency in a target. This allows for example to only use headers with convenience libraries to avoid linking to the same library multiple times. \nA partial dependency will have the same name version as the full dependency it is derived from as well as any values requested. \nPreviously pkg config files generated by the pkgconfig modules for static libraries with dependencies could only be used in a dependencies with static true. \nNow the generated file contains the needed dependencies libraries directly within Requires and Libs for build static libraries passed via the libraries keyword argument. \nProjects that install both a static and a shared version of a library should use the result of both_libraries to the pkg config file generator or use configure_file for more complicated setups. \nA StaticLibrary or SharedLibrary object can optionally be passed as first positional argument of the generate method. If one is provided a default value will be provided for all required fields of the pc file \nGenerating a pc file is now as simple as \npkgconfig.generate requires and requires_private parameters accept pkgconfig dependencies and libraries that pkgconfig files were generated for. \nBuild targets and custom targets can be listed in depends argument of test function. These targets will be built before test is run even if they have build_by_default false. \n"});