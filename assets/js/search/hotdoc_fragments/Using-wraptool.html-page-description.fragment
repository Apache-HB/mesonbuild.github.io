fragment_downloaded_cb({"url": "Using-wraptool.html#page-description", "fragment": "Wraptool is a subcommand of Meson that allows you to manage your source dependencies using the WrapDB database. It gives you all things you would expect such as installing and updating dependencies. The wrap tool works on all platforms the only limitation is that the wrap definition works on your target platform. If you find some Wraps that don t work please file bugs or even better patches. \nAll code examples here assume that you are running the commands in your top level source directory. Lines that start with the mark are commands to type. \nThe simplest operation to do is to query the list of packages available. To list them all issue the following command \nUsually you want to search for a specific package. This can be done with the search command \nTo determine which versions of libjpeg are available to install issue the info command \nThe first number is the upstream release version in this case a. The second number is the Wrap revision number. They don t relate to anything in particular but larger numbers imply newer releases. You should always use the newest available release. \nInstalling dependencies is just as straightforward. First just create the subprojects directory at the top of your source tree and issue the install command. \nNow you can issue a subproject libjpeg in your meson.build file to use it. \nTo check if your projects are up to date you can issue the status command. \nIn this case zlib has a newer release available. Updating it is straightforward \nWraptool can do other things besides these. Documentation for these can be found in the command line help which can be accessed by meson wrap help. \nMeson will only search for subprojects from the top level subprojects directory. If you have subprojects that themselves have subprojects you must transfer them to the top level. This can be done by going to your source root and issuing a promotion command. \nThis will cause Meson to go through your entire project tree find an embedded subproject and copy it to the top level. \nIf there are multiple embedded copies of a subproject Meson will not try to guess which one you want. Instead it will print all the possibilities. You can then manually select which one to promote by writing it out fully. \nThis functionality was added in Meson release \n"});