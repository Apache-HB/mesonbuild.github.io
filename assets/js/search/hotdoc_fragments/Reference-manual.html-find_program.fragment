fragment_downloaded_cb({"fragment": "find_program \nprogram_name1 here is a string that can be an executable or script to be searched for in PATH or a script in the current source directory. \nMeson will also autodetect scripts with a shebang line and run them with the executable interpreter specified in it both on Windows because the command invocator will reject the command otherwise and Unixes if the script file does not have the executable bit set Hence you must not manually add the interpreter while using this script as part of a list of commands. \nprogram_name2 and later positional arguments are used as fallback strings to search for. This is meant to be used for cases where the program may have many alternative names such as foo and foo.py. The function will check for the arguments one by one and the first one that is found is returned. Meson versions earlier than only accept one argument. \nIf you need to check for a program in a non standard location you can just pass an absolute path to find_program e.g. \nIt is also possible to pass an array to find_program in case you need to construct the set of paths to search on the fly \nIf none of the programs are found Meson will abort. You can tell it not to by setting the keyword argument required to false and then use the found method on the returned object to check whether it was found or not. \nThe returned object also has methods that are documented in the object methods section below. \n", "url": "Reference-manual.html#find_program"});