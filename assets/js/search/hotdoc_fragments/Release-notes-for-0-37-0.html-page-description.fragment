fragment_downloaded_cb({"url": "Release-notes-for-0-37-0.html#page-description", "fragment": "Mesontest is a new testing tool that allows you to run your tests in many different ways. As an example you can run tests multiple times \nor with an arbitrary wrapper executable \nor under gdb times in a row. This is handy for tests that fail spuriously as when the crash happens you are given the full GDB command line \nMesonrewriter is an experimental tool to manipulate your build definitions programmatically. It is not installed by default yet but those interested can run it from the source repository. \nAs an example here is how you would add a source file to a build target \nThe new shared_module function allows the creation of shared modules that is extension modules such as plugins that are meant to be used solely with dlopen rather than linking them to targets. \nMeson has long had support for compiling assembler GAS files. In this release we add support for compiling LLVM IR files in a similar way when building with the Clang compiler. Just add it to the list of files when creating a library or executable target like any other source file. No special handling is required \nAs always you can also mix LLVM IR files with C C and Assembly GAS sources. \nWe now include filetype indent and syntax files for ViM with the source tree. Please file issues or pull requests for enhancements or if you face any problems using them. \nwrap files for subprojects can now include a separate push URL to allow developers to push changes directly from a subproject git checkout. \nMeson now supports multiple version restrictions while searching for pkg config dependencies. \nYou can now specify the binary to be used for the following tools by setting the corresponding environment variable \nSimilar to other options such as bindir and datadir you can now specify the localstatedir for a project by passing localstatedir dir to meson or Dlocalstatedir dir to mesonconf after configuration. You can also access it from inside the meson.build file with get_option localstatedir \nChecks if the compiler prefixes an underscore to C global symbols with the default calling convention. This is useful when linking to compiled assembly code or other code that does not have its C symbol mangling handled transparently by the compiler. \nC symbol mangling is platform and architecture dependent and a helper function is needed to detect it. For example Windows bit prefixes underscore but bit does not. Linux does not prefix an underscore but OS X does. \nGLib Resources compiled with gnome.compile_resources that are added to the sources of a Vala build target will now cause the appropriate gresources flag to be passed to the Vala compiler so you don t need to add that yourself to vala_args \nYou can now pass arguments to install scripts added with meson.add_install_script All arguments after the script name will be passed to the script. \nThe MESON_INSTALL_DESTDIR_PREFIX environment variable is now set when install scripts are called. This contains the values of the DESTDIR environment variable and the prefix option passed to Meson joined together. This is useful because both those are usually absolute paths and joining absolute paths in a cross platform way is tricky. os.path.join in Python will discard all previous path segments when it encounters an absolute path and simply concatenating them will not work on Windows where absolute paths begin with the drive letter. \nAdded new options sbindir and infodir that can be used for installation. \n"});