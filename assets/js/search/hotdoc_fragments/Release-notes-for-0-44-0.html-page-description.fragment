fragment_downloaded_cb({"url": "Release-notes-for-0-44-0.html#page-description", "fragment": "Adds support for additional Qt5 Module keyword moc_extra_arguments \nPrefix dependent defaults for sysconfdir localstatedir and sharedstatedir \nAn array type for user options \nLLVM dependency supports both dynamic and static linking \nget_unquoted method for the configuration data object \nConfig Tool based dependencies gained a method to get arbitrary options \nEmbedded Python in Windows MSI packages \nWhen moc ing sources the moc tool does not know about any preprocessor macros. The generated code might not match the input files when the linking with the moc input sources happens. \nThis amendment allows to specify a a list of additional arguments passed to the moc tool. They are called moc_extra_arguments. \nThese options now default in a way consistent with FHS and common usage. \nIf prefix is usr default sysconfdir to etc localstatedir to var and sharedstatedir to var lib. \nIf prefix is usr local the default default localstatedir to var local and sharedstatedir to var local lib. \nPreviously to have an option that took more than one value a string value would have to be created and split but validating this was difficult. A new array type has been added to the meson_options.txt for this case. It works like a combo but allows more than one option to be passed. The values can optionally be validated against a list of valid values. When used on the command line with D values are passed as a comma separated list. \nThese can be overwritten on the command line \nThe LLVM dependency has been improved to consistently use dynamic linking. Previously recent version would link dynamically while older versions would link statically. \nNow LLVM also accepts the static keyword to enable statically linking to LLVM modules instead of dynamically linking. \nNew convenience method that allows reusing a variable value defined quoted. Useful in C for config.h strings for example. \nA number of dependencies CUPS LLVM pcap WxWidgets GnuStep use a config tool instead of pkg config. As of this version they now have a get_configtool_variable method which is analogous to the get_pkgconfig_variable for pkg config. \nMeson now ships an internal version of Python in the MSI installer packages. This means that it can run Python scripts that are part of your build transparently. That is if you do the following \nThen Meson will run the script with its internal Python version if necessary. \n"});