fragment_downloaded_cb({"url":"Vs-External.html#page-description","fragment":"Visual Studio supports developing projects that have an external build\nsystem. If you wish to use this integration method, here is how you\nset it up. This documentation describes Visual Studio 2019. Other\nversions have not been tested, but they should work roughly in the\nsame way.\nCheck out your entire project in some directory. Then open Visual\nStudio and select File -> New -> Project and from the list of\nproject types select Makefile project. Click Next.\nType your project's name In the Project name entry box. In this\nexample we're going to use testproj. Next select the Location\nentry and browse to the root of your projet sources. Make sure that\nthe checkbox Place solution and project in the same directory is\nchecked. Click Create.\nThe next dialog page defines build commands, which you should set up\nas follows:\nThen click Finish.\nVisual Studio has created a subdirectory in your source root. It is\nnamed after the project name. In this case it would be testproj. Now\nyou need to set up Meson for building both Debug and Release versions\nin this directory. Open a VS dev tool terminal, go to the source root\nand issue the following commands.\nNow you should have a working VS solution that compiles and runs both\nin Debug and Release modes.\nThis project is not very useful on its own, because it does not list\nany source files. VS does not seem to support adding entire source\ntrees at once, so you have to add sources to the solution manually.\nIn the main view go to Solution Explorer, right click on the project\nyou just created and select Add -> Existing Item, browse to your\nsource tree and select all files you want to have in this project. Now\nyou can use the editor and debugger as in a normal VS project.\n\n\n\n entry\n value\n\n\n\n\nbuild\n ninja -C $(Configuration)\n\n\n\nclean\n ninja -C $(Configuration) clean\n\n\n\nrebuild\n `ninja -C $(Configuration) clean all\n\n\nOutput\n `$(Configuration)\\name_of_your_executable.exe\n\n\n\n"});