fragment_downloaded_cb({"url": "Porting-from-autotools.html#page-description", "fragment": "This page uses AppStream glib as an example project. AppStream Glib contains some libraries GObject Introspection data tests man pages i18n bash completion with optional flags to build not build support for some things. \nMeson comes with a helper script ac_converter that you can use to convert the basic autoconf checks for your project. \nFirst let s look at configure.ac and write the same in meson.build. \nMeson doesn t provide the same function so just ignore this. \nconfigure.ac \nmeson.build \nconfigure.ac \nmeson.build \nNote that this must be the first line of your meson.build file. \nconfigure.ac \nYou don t need to do the same in Meson because it does not have two different types of files Makefile configure \nconfigure.ac \nmeson.build \nMeson doesn t support autoheaders you need to manually specify what do you want to see in header file write configuration_data object and use configure_file \nYou can also substitute variables of type SOME_VAR with configure data. The details are on the configuration page. \nconfigure.ac \nmeson.build \nconfigure.ac \nmeson.build \nconfigure.ac \nmeson.build \nmeson_options.txt \nNext step is Makefile.am. In meson you don t need to have other file you still use meson.build. \nMakefile.am \nmeson.build \nMakefile.am \nIn Meson you don t need have CLEANFILES because in meson you are building in temporary directory usually called build you manually removing it. You also not need to use EXTRA_DIST because you will make tarballs via git archive or something like this. \nMakefile.am \nmeson.build \nMakefile.am \nmeson.build \nMakefile.am \nmeson.build \nappstream glib.map \nMakefile.am \nmeson.build \nMakefile.am \nmeson.build \nMakefile.am \nmeson.build \nMakefile.am \nmeson.build \nconfigure.ac \nMakefile.am \nmeson.build \nmeson_post_install.py \nNote this example does not include intltool usage. \nconfigure.ac \npo Makevars \nMakefile.am \nmeson.build \npo meson.build \n"});