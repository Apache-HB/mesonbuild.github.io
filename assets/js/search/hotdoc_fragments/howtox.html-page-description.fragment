fragment_downloaded_cb({"url": "howtox.html#page-description", "fragment": "This page lists code snippets for common tasks. These are written mostly using the C compiler but the same approach should work on almost all other compilers. \nWhen first running Meson set it in an environment variable. \nNote that environment variables like CC always refer to the native compiler. That is the compiler used to compile programs that run on the current machine. The compiler used in cross compilation is set with the cross file. \nThis behaviour is different from e.g. Autotools where cross compilation is done by setting CC to point to the cross compiler such as usr bin arm linux gnueabihf gcc The reason for this is that Meson supports natively the case where you compile helper tools such as code generators and use the results during the build. Because of this Meson needs to know both the native and the cross compiler. The former is set via the environment variables and the latter via the cross file only. \nThe language version can also be set on a per target basis. \nLots of people seem to do this manually with find_library pthread or something similar. Do not do that. It is not portable. Instead do this. \nThe behavior is the same as with other build systems with environment variables during first invocation. Do not use these when you need to rebuild the source \nFirst check which arguments to use. \nThen use it in a target. \nIf you want to use the arguments on all targets then do this. \nconfigure_file preserves metadata so if your template file has execute permissions the generated file will have them too. \nFirst initialize the build directory with this command. \nThen issue the following commands. \nThe coverage report can be found in the meson logs subdirectory. \nBy default the debug build does not use any optimizations. This is the desired approach most of the time. However some projects benefit from having some minor optimizations enabled. GCC even has a specific compiler flag Og for this. To enable its use just issue the following command. \nThis causes all subsequent builds to use this command line argument. \nClang comes with a selection of analysis tools such as the address sanitizer. Meson has native support for these with the b_sanitize option. \nAfter this you just compile your code and run the test suite. Address sanitizer will abort executables which have bugs so they show up as test failures. \nInstall scan build and configure your project. Then do this \nYou can use the SCANBUILD environment variable to choose the scan build executable. \nUsing profile guided optimization with GCC is a two phase operation. First we set up the project with profile measurements enabled and compile it. \nThen we need to run the program with some representative input. This step depends on your project. \nOnce that is done we change the compiler flags to use the generated information and rebuild. \nAfter these steps the resulting binary is fully optimized. \nSome platforms e.g. Linux have a standalone math library. Other platforms pretty much everyone else do not. How to specify that m is used only when needed \n"});