fragment_downloaded_cb({"url":"i18n-module.html#page-description","fragment":"This module provides internationalisation and localisation functionality.\nTo use this module, just do: i18n = import('i18n'). The\nfollowing functions will then be available as methods on the object\nwith the name i18n. You can, of course, replace the name i18n with\nanything else.\nSets up gettext localisation so that translations are built and placed\ninto their proper locations during install. Takes one positional\nargument which is the name of the gettext module.\nThis function also defines targets for maintainers to use:\nNote: These output to the source directory\nThis merges translations into a text file using msgfmt. See\ncustom_target\nfor normal keywords. In addition it accepts these keywords:\nAdded 0.37.0\n\n\nargs: list of extra arguments to pass to xgettext when\ngenerating the pot file\n\ndata_dirs: (Added 0.36.0) list of directories to be set for\nGETTEXTDATADIRS env var (Requires gettext 0.19.8+), used for local\nits files\n\nlanguages: list of languages that are to be generated. As of\n0.37.0 this is optional and the\nLINGUAS\nfile is read.\n\npreset: (Added 0.37.0) name of a preset list of arguments,\ncurrent option is 'glib', see\nsource\nfor for their value\n\ninstall: (Added 0.43.0) if false, do not install the built translations.\n\ninstall_dir: (Added 0.50.0) override default install location, default is localedir\n\n\n\n\n<project_id>-pot: runs xgettext to regenerate the pot file\n\n<project_id>-update-po: regenerates the .po files from current .pot file\n\n<project_id>-gmo: builds the translations without installing\n\n\n\ndata_dirs: (Added 0.41.0) list of directories for its files (See\nalso i18n.gettext())\n\npo_dir: directory containing translations, relative to current directory\n\ntype: type of file, valid options are 'xml' (default) and 'desktop'\n\n\nargs: (Added 0.51.0) list of extra arguments to pass to msgfmt\n\n\n"});