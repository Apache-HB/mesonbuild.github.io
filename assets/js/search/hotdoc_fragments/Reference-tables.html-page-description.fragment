fragment_downloaded_cb({"url": "Reference-tables.html#page-description", "fragment": "These are return values of the get_id Compiler family and get_argument_syntax Argument syntax method in a compiler object. \nThese are returned by the cpu_family method of build_machine host_machine and target_machine. For cross compilation they are set in the cross file. \nAny cpu family not listed in the above list is not guaranteed to remain stable in future releases. \nThose porting from autotools should note that meson does not add endianness to the name of the cpu_family. For example autotools will call little endian PPC64 ppc64le meson will not you must also check the endian value of the machine for this information. \nThese are provided by the system method call. \nAny string not listed above is not guaranteed to remain stable in future releases. \nThese are the parameter names for passing language specific arguments to your build target. \nThese environment variables will be used to modify the compiler and linker flags. \nIt is recommended that you do not use these. They are provided purely to for backwards compatibility with other build systems. There are many caveats to their use especially when rebuilding the project. It is highly recommended that you use the command line arguments instead. \nThese are the parameters names that are supported using compiler.has_function_attribute or compiler.get_supported_function_attributes \nThese values are supported using the GCC style __attribute__ annotations which are supported by GCC Clang and other compilers. \nThese values are supported using the MSVC style __declspec annotation which are supported by MSVC GCC Clang and other compilers. \nThese are the values that can be passed to dependency function s method keyword argument. \n"});